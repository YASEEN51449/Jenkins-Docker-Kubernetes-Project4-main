node{
	stage('Git Checkout'){
		git branch: 'main', credentialsId: 'git_credentials', url: 'https://github.com/YASEEN51449/Jenkins-Docker-Kubernetes-Project4-main.git'
	}

	stage('Maven Clean Package') {
		def mavenHome =  tool name: "Maven", type: "maven"
		def mavenCMD = "${mavenHome}/bin/mvn"
		sh "${mavenCMD} clean package"
	}
	
	stage('Build Docker Image'){
		sh "docker build -t mahammadyaseen/docker-jenkins:${env.BUILD_ID} ."
	}

	stage('Push Image to Docker Hub'){
		withCredentials([string(credentialsId: 'docker_hub', variable: 'docker_hub')]) {
			sh "docker login -u mahammadyaseen -p ${docker_hub}"
		}
		sh "docker push mahammadyaseen/docker-jenkins:${env.BUILD_ID}"
	}
	
	stage('Push Image in ECR'){
		ECRURL = 'https://339713155907.dkr.ecr.ap-south-1.amazonaws.com'
		ECRRED = 'ecr:ap-south-1:awscredentials'
		docker.withRegistry("${ECRURL}","${ECRRED}"){
			docker.image("mahammadyaseen/docker-jenkins:${env.BUILD_ID}").push()
		}
	}
	
	stage('Run Container on AWS Server'){
		def dockerRun = "docker run -d -p 8080:8080 --name myapp-${env.BUILD_ID} mahammadyaseen/docker-jenkins:${env.BUILD_ID}"
		sshagent(['aws_instance']) {
		    sh "ssh -o StrictHostKeyChecking=no ubuntu@172.31.44.55 ${dockerRun}"
		}
	}
}
